class MyStack {
    Queue<Integer> stack = new LinkedList<Integer>();
    // Push element x onto stack.
    public void push(int x) {
        stack.offer(x);
    }

    // Removes the element on top of the stack.
    public void pop() {
        Queue<Integer> linshi = new LinkedList<Integer>();
        while(stack.size()!=1){
            int n = stack.poll();
            linshi.offer(n);
        }
        stack = linshi;
    }

    // Get the top element.
    public int top() {
        Queue<Integer> linshi = new LinkedList<Integer>();
        while(stack.size()!=1){
            int n = stack.poll();
            linshi.offer(n);
        }
        int n = stack.poll();
        linshi.offer(n);
        stack = linshi;
        return n;
    }

    // Return whether the stack is empty.
    public boolean empty() {
        return stack.isEmpty();
    }
}